"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1024],{5392:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"Toolchain/Recipes/DefiningInteractions","title":"Defining new interactions","description":"Step 1 - defining a new input action","source":"@site/docs/Toolchain/04-Recipes/04-DefiningInteractions.md","sourceDirName":"Toolchain/04-Recipes","slug":"/Toolchain/Recipes/DefiningInteractions","permalink":"/Toolchain/Recipes/DefiningInteractions","draft":false,"unlisted":false,"editUrl":"https://github.com/project-SIMPLE/documentation/tree/main/docs/Toolchain/04-Recipes/04-DefiningInteractions.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Grabbing objects","permalink":"/Toolchain/Recipes/GrabbingObjects"},"next":{"title":"Sending and receiving messages from/to GAMA/Unity","permalink":"/Toolchain/Recipes/SendingReceivingMessages"}}');var c=n(4848),o=n(8453);const a={},s="Defining new interactions",r={},h=[{value:"Step 1 - defining a new input action",id:"step-1---defining-a-new-input-action",level:3},{value:"Step 2 - define the effects of this input action",id:"step-2---define-the-effects-of-this-input-action",level:3},{value:"Step 3 - Do the link between the input action and the script",id:"step-3---do-the-link-between-the-input-action-and-the-script",level:3}];function d(e){const t={h1:"h1",h3:"h3",header:"header",p:"p",...(0,o.RP)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"defining-new-interactions",children:"Defining new interactions"})}),"\n",(0,c.jsx)(t.h3,{id:"step-1---defining-a-new-input-action",children:"Step 1 - defining a new input action"}),"\n",(0,c.jsx)(t.p,{children:'Double click on "XRI Default Input Actions" in "Assets/Samples/XR Interaction Toolkit/2.4.3/Starter Assets"'}),"\n",(0,c.jsx)("img",{width:"1302",alt:"InputAction",src:"https://github.com/user-attachments/assets/c30b84ac-52e3-41ae-a34a-d2889f840e52"}),"\n",(0,c.jsx)(t.p,{children:"If the wanted input action is not present, you can define a new one: select one action map, then in action, right click and choose \xab\xa0add action\xa0\xbb.  Choose a new name for the action, then do the binding with the controller: in the Binding, define the path. For Meta quest 2/3, choose \xab\xa0Oculus Touch Controller\xa0\xbb, then one of the button/trigger/touch of the controller"}),"\n",(0,c.jsx)("img",{width:"1155",alt:"NewInputAction",src:"https://github.com/user-attachments/assets/b25e9b5e-b9d0-45d8-8515-c93fcc123059"}),"\n",(0,c.jsx)(t.h3,{id:"step-2---define-the-effects-of-this-input-action",children:"Step 2 - define the effects of this input action"}),"\n",(0,c.jsx)(t.p,{children:"Open the script \xab\xa0SimulationManagerInteraction\xa0\xbb in (Assets/Scripts/Gama Provider/Simulation)"}),"\n",(0,c.jsx)(t.p,{children:"Add a new variable \xab\xa0 [SerializeField] protected InputActionReference myButton = null;\xa0\xbb"}),"\n",(0,c.jsx)(t.p,{children:"Define in the OtherUpdate method what will happens when this action is triggered"}),"\n",(0,c.jsx)(t.h3,{id:"step-3---do-the-link-between-the-input-action-and-the-script",children:"Step 3 - Do the link between the input action and the script"}),"\n",(0,c.jsx)(t.p,{children:"In the Scene, inspect the game object \xabManager/Game Manager\xa0\xbb.\nGive a value for the variable \xab\xa0My Button\xa0\xbb - Click on the circle on the right of the field, and search the input action wanted (for example, the one created in step 1)."}),"\n",(0,c.jsx)("img",{width:"933",alt:"LinkInputAction",src:"https://github.com/user-attachments/assets/41cfd39e-dff3-4a47-9de8-c71d4c1ca841"})]})}function p(e={}){const{wrapper:t}={...(0,o.RP)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{RP:()=>o,xA:()=>s});var i=n(6540);const c=i.createContext({});function o(e){const t=i.useContext(c);return i.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const a={};function s({components:e,children:t,disableParentContext:n}){let s;return s=n?"function"==typeof e?e({}):e||a:o(e),i.createElement(c.Provider,{value:s},t)}}}]);