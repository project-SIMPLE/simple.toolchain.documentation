"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5453],{3009:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>g,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"Tutorials/ManagingAgentsAnimation","title":"ManagingAgentsAnimation","description":"Management of agents\u2019 animation","source":"@site/docs/Tutorials/ManagingAgentsAnimation.md","sourceDirName":"Tutorials","slug":"/Tutorials/ManagingAgentsAnimation","permalink":"/Tutorials/ManagingAgentsAnimation","draft":false,"unlisted":false,"editUrl":"https://github.com/project-SIMPLE/documentation/tree/main/docs/Tutorials/ManagingAgentsAnimation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"Importing-Data-from-GAMA","permalink":"/Tutorials/Importing-Data-from-GAMA"},"next":{"title":"ManagingWater","permalink":"/Tutorials/ManagingWater"}}');var i=n(4848),o=n(8453);const s={},r=void 0,g={},m=[{value:"Management of agents\u2019 animation",id:"management-of-agents-animation",level:2}];function l(t){const e={a:"a",code:"code",em:"em",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,o.RP)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"management-of-agents-animation",children:"Management of agents\u2019 animation"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"Link to the example model"})}),": ",(0,i.jsx)(e.a,{href:"https://github.com/project-SIMPLE/simple.toolchain/blob/2024-06/GAMA%20Plugin/gaml.extension.unity/models/LinkToUnity/Models/Code%20Examples/Manage%20Animation%20for%20Agents.gaml",children:"LinkToUnity/Models/Code Examples/Manage Animation for Agents.gaml"})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:"https://github.com/user-attachments/assets/f34c7507-2b87-4687-b46b-3fa05d626d11",alt:"ezgif com-optimize-3"})}),"\n",(0,i.jsx)(e.p,{children:"The general principle is to modify from GAMA the parameters of an animator or sent triggers to it. It works both for geometries/agents (sent to Unity using add_geometries_to_send) and other player agents (player_unity_properties)."}),"\n",(0,i.jsx)("img",{width:"756",alt:"Animation",src:"https://github.com/user-attachments/assets/67b8de21-31ac-4275-af36-90fb6e65f828"}),"\n",(0,i.jsx)(e.p,{children:'The triggering of an animation is done using the action "update_animation" of the Unity Linker.'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'ask unity_linker {\n\tdo update_animation(\n\t\tplayers: unity_player as list, //list of players to send the information to\n\t\tgeometries: boy_agent, //list of geometries/agents to update the geometry to - these agents should have been sent to Unity using add_geometries_to_send\n\t\tparameters: ["MoveSpeed":: 1.0], //list of parameters to send to trigger animation - key(string): name of the parameter, value: either a float, an integer or a boolean\n\t\ttriggers: []//list of triggers (string)\n\t);\n}\n'})})]})}function d(t={}){const{wrapper:e}={...(0,o.RP)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(l,{...t})}):l(t)}},8453:(t,e,n)=>{n.d(e,{RP:()=>o,xA:()=>r});var a=n(6540);const i=a.createContext({});function o(t){const e=a.useContext(i);return a.useMemo((()=>"function"==typeof t?t(e):{...e,...t}),[e,t])}const s={};function r({components:t,children:e,disableParentContext:n}){let r;return r=n?"function"==typeof t?t({}):t||s:o(t),a.createElement(i.Provider,{value:r},e)}}}]);